@page "/EditarArtista/{NomeArtista}"
@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager
<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Editar Artista</MudText>

    <MudForm>
        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                      Variant="Variant.Outlined"
                      Required="true"
                      @bind-Value="nome"
                      RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
                      Variant="Variant.Outlined"
                      @bind-Value="biografia"
                      Lines="4"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <div class="d-flex justify-space-between mt-4">
            <MudButton Variant="Variant.Filled" @onclick="Voltar" Color="Color.Primary">Voltar</MudButton>
            <MudButton Variant="Variant.Filled" @onclick="Atualizar" Color="Color.Primary">Atualizar</MudButton>
            <MudButton Variant="Variant.Filled" @onclick="Deletar" Color="Color.Primary">Deletar</MudButton>
        </div>
    </MudForm>
</MudPaper>

@code {
    private string? nome;
    private string? biografia;
    [Parameter]
    public string? NomeArtista { get; set; }
    public ArtistaResponse? Artista { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Artista = await artistaAPI.GetArtistaPorNomeAsync(NomeArtista!);
        nome = Artista!.Nome;
        biografia = Artista!.Bio;
    }

    private void Voltar()
    {
        navigationManager.NavigateTo("/Artistas");
    }
    private async Task Deletar()
    {
        await artistaAPI.DeleteArtistaAsync(Artista!.Id);
        navigationManager.NavigateTo("/Artistas");
    }

    private async Task Atualizar()
    {
        var requestEdit = new ArtistaRequestEdit(Artista!.Id, nome!, biografia!, Artista.FotoPerfil!);
        await artistaAPI.AtualizarArtistaAsync(requestEdit!);
        navigationManager.NavigateTo("/Artistas");
    }

}
